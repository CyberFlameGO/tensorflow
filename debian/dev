#!/bin/bash
set -e

# prepare embedded source code
bash debian/embedded.sh

# prepare misc files
mkdir -p external/bazel_tools/tools/genrule/
cp -v debian/patches/genrule-setup.sh external/bazel_tools/tools/genrule/genrule-setup.sh
for I in $(ls debian/buildlogs/*.genrule_script.sh); do
	sed -i -e 's@bazel-out/k8-opt/bin/@./@g' \
		-e 's@bazel-out/host/bin/@./@g' $I
	cp -v $I tensorflow/cc/
done
mkdir -p tensorflow/cc/ops
for I in $(ls debian/buildlogs/*gen_cc-2.params); do
	sed -i -e 's@bazel-out/k8-opt/bin/@@g' \
		-e 's@bazel-out/host/bin/@@g' \
		-e 's@/_objs/@/@g' \
		-e 's@--start-lib@@g' \
		-e 's@--end-lib@@g' \
	   	$I
	cp -v $I tensorflow/cc/ops
done

# trigger build
build() {
which pypy3 && PY=pypy3 || PY=python3
$PY debian/fakebazel.py
NINJA_STATUS="[1;31m[%es (%p) %f/%t][0;m " ninja -v
}

case $1 in
	configure)
		;;
	*)
		build;;
esac
